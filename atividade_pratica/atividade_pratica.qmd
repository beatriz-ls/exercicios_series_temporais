---
title: "Prova Prática"
author: "Beatriz Lima Silveira"
format: pdf
---

```{r setup, include=FALSE}
# Configuração global para aumentar o tamanho dos gráficos
knitr::opts_chunk$set(fig.width = 10, fig.height = 6, warning=FALSE, message=FALSE)
```

```{r packages, warning=FALSE, message=FALSE}

library(ggplot2)
library(tseries)
library(readODS)
library(tidyverse)
library(forecast)
library(readxl)
```

## A série Temperatura em Ubatuba:

```{r ubatuba, warning=FALSE}

data <- read_ods("data/temperatura.ods")

# transformando em formato time series

data_ts <- ts(data$Ubatuba,  start = c(1976, 1), frequency = 12)

decompose <- decompose(data_ts)

plot(decompose)

data_fit <- data %>% select(-c(Cananeia))

# suavização por médias móveis

df_ma <- cbind(data_fit$Ubatuba,
               ma(data_fit$Ubatuba, order = 6),
               ma(data_fit$Ubatuba, order = 12))


ts.plot(df_ma, col = c("black", "blue", "red"), lty = 1:3,
        main = "Temperatura em Ubatuba e Médias Móveis")
legend("topright",
       legend = c("Original", "Média Móvel 6", "Média Móvel 12"),
       col = c("black", "blue", "red"), lty = 1:3, bty = "n")

# ajustar o modelo de holt-winters
modelo_hw <- hw(data_ts, seasonal = "additive")

plot(data_ts, type = "l", col = "blue",
     main = "Série Original e Holt-Winters", ylab = "Valor")
lines(modelo_hw$fitted, col = "red", lwd = 2)
legend("topright", legend = c("Série Original", "Ajuste HW"),
       col = c("blue", "red"), lwd = 2)

```

## A série temperatura em Cananeia:

```{r cananeia, warning=FALSE}


data <- read_ods("data/temperatura.ods")

# transformando em formato time series

data_ts <- ts(data$Cananeia,  start = c(1976, 1), frequency = 12)


decompose <- decompose(data_ts)

plot(decompose)


data_fit <- data %>% select(-c(Ubatuba))

# ajustar o modelo de holt-winters
modelo_hw <- hw(data_ts, seasonal = "additive")

plot(data_ts, type = "l", col = "blue", main = "Série Original e Holt-Winters", ylab = "Valor")
lines(modelo_hw$fitted, col = "red", lwd = 2)
legend("topright", legend = c("Série Original", "Ajuste HW"), col = c("blue", "red"), lwd = 2)

# criando um dataframe para visualização
df_plot <- data.frame(
  Data = time(data_ts), 
  Original = as.numeric(data_ts),
  Suavizado = as.numeric(modelo_hw$fitted)
)

# plotando com ggplot2
ggplot(df_plot, aes(x = Data)) +
  geom_line(aes(y = Original, color = "Original")) +
  geom_line(aes(y = Suavizado, color = "Suavizado"), linetype = "dashed") +
  labs(title = "Série Original vs Série Suavizada (Holt-Winters)",
       x = "Tempo", y = "Valor") +
  scale_color_manual(values = c("Original" = "black", "Suavizado" = "red")) +
  theme_minimal()



# suavização por médias móveis

df_ma <- cbind(data_fit$Cananeia,
               ma(data_fit$Cananeia, order = 6),
               ma(data_fit$Cananeia, order = 12))


ts.plot(df_ma, col = c("black", "blue", "red"), lty = 1:3,
        main = "Temperatura em Cananeia e Médias Móveis")
legend("topright",
       legend = c("Original", "Média Móvel 6", "Média Móvel 12"),
       col = c("black", "blue", "red"), lty = 1:3, bty = "n")

```

## Série Consumo

```{r consumo, warning=FALSE}


data <- read_excel("data/CONSUMO.xls")

# transformando em formato time series

data_ts <- ts(data$consumo,  start = c(1984,1), frequency = 12)


decompose <- decompose(data_ts)

plot(decompose)


# ajustar o modelo de holt-winters
modelo_hw <- hw(data_ts, seasonal = "additive")

plot(data_ts, type = "l", col = "blue", main = "Série Original e Holt-Winters", ylab = "Valor")
lines(modelo_hw$fitted, col = "red", lwd = 2)
legend("topright", legend = c("Série Original", "Ajuste HW"), col = c("blue", "red"), lwd = 2)

# criando um dataframe para visualização
df_plot <- data.frame(
  Data = time(data_ts), 
  Original = as.numeric(data_ts),
  Suavizado = as.numeric(modelo_hw$fitted)
)

# plotando com ggplot2
ggplot(df_plot, aes(x = Data)) +
  geom_line(aes(y = Original, color = "Original")) +
  geom_line(aes(y = Suavizado, color = "Suavizado"), linetype = "dashed") +
  labs(title = "Série Original vs Série Suavizada (Holt-Winters)",
       x = "Tempo", y = "Valor") +
  scale_color_manual(values = c("Original" = "black", "Suavizado" = "red")) +
  theme_minimal()



# suavização por médias móveis

df_ma <- cbind(data$consumo,
               ma(data$consumo, order = 6),
               ma(data$consumo, order = 12))


ts.plot(df_ma, col = c("black", "blue", "red"), lty = 1:3,
        main = "Consumo e Médias Móveis")
legend("topright", legend = c("Original", "Média Móvel 6", "Média Móvel 12"),
       col = c("black", "blue", "red"), 
       lty = 1:3, bty = "n")


```
